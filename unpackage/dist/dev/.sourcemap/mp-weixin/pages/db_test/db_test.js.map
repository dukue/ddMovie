{"version":3,"sources":["uni-app:///main.js","webpack:///C:/Users/dk/Documents/HBuilderProjects/Dmovie/pages/db_test/db_test.vue?4c75","webpack:///C:/Users/dk/Documents/HBuilderProjects/Dmovie/pages/db_test/db_test.vue?8ce2","webpack:///C:/Users/dk/Documents/HBuilderProjects/Dmovie/pages/db_test/db_test.vue?d9c9","webpack:///C:/Users/dk/Documents/HBuilderProjects/Dmovie/pages/db_test/db_test.vue?42a7","uni-app:///pages/db_test/db_test.vue","webpack:///C:/Users/dk/Documents/HBuilderProjects/Dmovie/pages/db_test/db_test.vue?129b","webpack:///C:/Users/dk/Documents/HBuilderProjects/Dmovie/pages/db_test/db_test.vue?8178"],"names":["wx","__webpack_require_UNI_MP_PLUGIN__","__webpack_require__","createPage","Page","data","userInfos","databaseName","databasePath","tableName","inputName","inputId","log","onLoad","console","methods","onNameChange","onIdChange","isOpen","name","path","openDatabase","plus","success","fail","closeDatabase","createTable","sql","insertOneData","id","deleteDataByName","deleteAllData","querryTargetData","querryAllData"],"mappings":";;;;;;;;;;;;;AAAA;AAGA;AACA;AAHA;AACAA,EAAE,CAACC,iCAAiC,GAAGC,mBAAmB;AAG1DC,UAAU,CAACC,gBAAI,CAAC,C;;;;;;;;;;;;;ACLhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoH;AACpH;AAC2D;AACL;AACa;;;AAGnE;AACqK;AACrK,gBAAgB,+KAAU;AAC1B,EAAE,6EAAM;AACR,EAAE,kFAAM;AACR,EAAE,2FAAe;AACjB;AACA;AACA;AACA;AACA;AACA,EAAE,sFAAU;AACZ;AACA;;AAEA;AACe,gF;;;;;;;;;;;;ACvBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,aAAa,uPAEN;AACP,KAAK;AACL;AACA,aAAa,qRAEN;AACP,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACtCA;AAAA;AAAA;AAAA;AAAimB,CAAgB,2nBAAG,EAAC,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCiCrnB;EACAC;IACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;IACA;EACA;EACAC;IACAC;EACA;EACAC;IACAC;MACA;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;IACA;IACAC;MACA;QACAC;QACAC;MACA;MACA;MACA;IACA;IACAC;MAAA;MACAC;QACAH;QACAC;QACAG;UACA;QACA;QACAC;UACAV;UACA;QACA;MACA;IACA;IACAW;MAAA;MACAH;QACAH;QACAI;UACA;QACA;QACAC;UACAV;UACA;QACA;MACA;IACA;IACAY;MAAA;MACA,iEACA;MACAZ;MACAQ;QACAH;QACAQ;QACAJ;UACA;QACA;QACAC;UACAV;UACA;QACA;MACA;IACA;IACAc;MAAA;MACA;QACA;QACA;MACA;MACA;MACA;MACA;MACAd;MACAQ;QACA;QACAH;QACAQ;QACAJ;UACA;UACA;YACAJ;YACAU;UACA;QACA;QACAL;UACAV;UACA;YACA;UACA;YACA;UACA;QACA;MACA;IACA;IACAgB;MAAA;MACA;MACAhB;MACAQ;QACAH;QACAQ;QACAJ;UACAT;UACA;QACA;QACAU;UACAV;UACA;QACA;MACA;IACA;IACAiB;MAAA;MACA;MACAjB;MACAQ;QACAH;QACAQ;QACAJ;UACAT;UACA;UACA;QACA;QACAU;UACAV;UACA;QACA;MACA;IACA;IACAkB;MAAA;MACA;QACA;QACA;MACA;MACA;MACA;MACA;MACAlB;MACA;MACAQ;QACAH;QACAQ;QACAJ;UACA;UACAT;UACA;UACA;YACA;YACA;cACAK;cACAU;YACA;UACA;QACA;QACAL;UACAV;UACA;QACA;MACA;IACA;IACAmB;MAAA;MACA;MACAnB;MACA;MACAQ;QACAH;QACAQ;QACAJ;UACAT;UACA;UACA;UACA;YACA;YACA;cACAK;cACAU;YACA;UACA;QACA;QACAL;UACAV;UACA;QACA;MACA;IACA;EACA;AACA;AAAA,2B;;;;;;;;;;;;AC3OA;AAAA;AAAA;AAAA;AAAm3B,CAAgB,o3BAAG,EAAC,C;;;;;;;;;;;ACAv4B;AACA,OAAO,KAAU,EAAE,kBAKd","file":"pages/db_test/db_test.js","sourcesContent":["import 'uni-pages';\n// @ts-ignore\nwx.__webpack_require_UNI_MP_PLUGIN__ = __webpack_require__;\nimport Vue from 'vue'\nimport Page from './pages/db_test/db_test.vue'\ncreatePage(Page)","import { render, staticRenderFns, recyclableRender, components } from \"./db_test.vue?vue&type=template&id=51129e6e&\"\nvar renderjs\nimport script from \"./db_test.vue?vue&type=script&lang=js&\"\nexport * from \"./db_test.vue?vue&type=script&lang=js&\"\nimport style0 from \"./db_test.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!E:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\runtime\\\\componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"pages/db_test/db_test.vue\"\nexport default component.exports","export * from \"-!E:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\loaders\\\\templateLoader.js??vue-loader-options!E:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--17-0!E:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\template.js!E:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-uni-app-loader\\\\page-meta.js!E:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!E:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./db_test.vue?vue&type=template&id=51129e6e&\"","var components\ntry {\n  components = {\n    uniList: function () {\n      return import(\n        /* webpackChunkName: \"uni_modules/uni-list/components/uni-list/uni-list\" */ \"@/uni_modules/uni-list/components/uni-list/uni-list.vue\"\n      )\n    },\n    uniListItem: function () {\n      return import(\n        /* webpackChunkName: \"uni_modules/uni-list/components/uni-list-item/uni-list-item\" */ \"@/uni_modules/uni-list/components/uni-list-item/uni-list-item.vue\"\n      )\n    },\n  }\n} catch (e) {\n  if (\n    e.message.indexOf(\"Cannot find module\") !== -1 &&\n    e.message.indexOf(\".vue\") !== -1\n  ) {\n    console.error(e.message)\n    console.error(\"1. 排查组件名称拼写是否正确\")\n    console.error(\n      \"2. 排查组件是否符合 easycom 规范，文档：https://uniapp.dcloud.net.cn/collocation/pages?id=easycom\"\n    )\n    console.error(\n      \"3. 若组件不符合 easycom 规范，需手动引入，并在 components 中注册该组件\"\n    )\n  } else {\n    throw e\n  }\n}\nvar render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!E:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!E:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--13-1!E:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\script.js!E:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!E:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./db_test.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!E:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!E:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--13-1!E:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\script.js!E:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!E:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./db_test.vue?vue&type=script&lang=js&\"","<template>\n    <view class=\"style-content style-column\">\n        <view>注意：操作数据库之前需先打开数据库并创建数据表</view>\n        <view class=\"style-line style-row\">\n            <view class=\"style-half style-row\">\n                <view class=\"style-one-of-third\">姓名：</view>\n                <editor id=\"editor\" class=\"style-two-of-third\" placeholder=\"点击输入\" @input=\"onNameChange\"></editor>\n            </view>\n            <view class=\"style-half style-row\">\n                <view class=\"style-one-of-third\">工号：</view>\n                <editor class=\"style-two-of-third\" placeholder=\"点击输入\" @input=\"onIdChange\"></editor>\n            </view>\n        </view>\n        <view>操作结果：{{log}}</view>\n        <button class=\"style-line\" @click=\"isOpen\">数据库是否已打开</button>\n        <button class=\"style-line\" @click=\"openDatabase\">打开数据库</button>\n        <button class=\"style-line\" @click=\"closeDatabase\">关闭数据库</button>\n        <button class=\"style-line\" @click=\"createTable\">创建数据表</button>\n        <button class=\"style-line\" @click=\"insertOneData\">插入一条数据</button>\n        <button class=\"style-line\" @click=\"deleteDataByName\">根据姓名删除数据</button>\n        <button class=\"style-line\" @click=\"deleteAllData\">删除所有数据</button>\n        <button class=\"style-line\" @click=\"querryTargetData\">根据姓名查询数据，刷新数据列表</button>\n        <button class=\"style-line\" @click=\"querryAllData\">查询所有数据，刷新数据列表</button>\n        <view class=\"style-line\">数据列表</view>\n        <uni-list>\n            <uni-list-item v-for=\"(userInfo, index) in userInfos\" :title=\"userInfo.name\" :rightText=\"userInfo.id\"\n                :key=\"index\">\n            </uni-list-item>\n        </uni-list>\n    </view>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                userInfos: [],\n                //数据库名称，这里我推测应该是要和下面一行数据库路径中的名称保持一致，暂时没验证过不一致会怎样\n                databaseName: 'project',\n                //数据库路径\n                databasePath: '_doc/project.db',\n                //数据表名称\n                tableName: 'userInfo',\n                //用户输入的名字\n                inputName: '',\n                //用户输入的工号\n                inputId: '',\n                //操作日志\n                log: '请开始操作'\n            }\n        },\n        onLoad() {\n            console.log('执行 onLoad');\n        },\n        methods: {\n            onNameChange(e) {\n                let input = e.detail.text;\n                //不知道为啥，这里编辑框的内容最后总是带有一个换行符'\\n'，所以需要将其处理掉\n                this.inputName = input.substring(0, input.lastIndexOf(\"\\n\"));\n                this.log = this.inputName;\n            },\n            onIdChange(e) {\n                let input = e.detail.text;\n                this.inputId = input.substring(0, input.lastIndexOf(\"\\n\"));\n                this.log = this.inputId;\n            },\n            isOpen() {\n                let res = plus.sqlite.isOpenDatabase({\n                    name: this.databaseName,\n                    path: this.databasePath\n                });\n                this.log = res ? \"数据库已开启\" : '数据库已关闭';\n                return res;\n            },\n            openDatabase() {\n                plus.sqlite.openDatabase({\n                    name: this.databaseName,\n                    path: this.databasePath,\n                    success: (e) => {\n                        this.log = '打开或创建数据库成功';\n                    },\n                    fail: (e) => {\n                        console.log(e);\n                        this.log = '打开或创建数据库失败';\n                    }\n                });\n            },\n            closeDatabase() {\n                plus.sqlite.closeDatabase({\n                    name: this.databaseName,\n                    success: (e) => {\n                        this.log = '关闭数据库成功';\n                    },\n                    fail: (e) => {\n                        console.log(e);\n                        this.log = '关闭数据库失败';\n                    }\n                });\n            },\n            createTable() {\n                const createSql = 'create table if not exists ' + this.tableName +\n                    '(name VARCHAR(32) PRIMARY KEY NOT NULL,id VARCHAR(32) NOT NULL)';\n                console.log(createSql);\n                plus.sqlite.executeSql({\n                    name: this.databaseName,\n                    sql: createSql,\n                    success: (e) => {\n                        this.log = '创建数据表成功';\n                    },\n                    fail: (e) => {\n                        console.log(e);\n                        this.log = '创建数据表失败';\n                    }\n                });\n            },\n            insertOneData() {\n                if (!this.inputName || 0 === this.inputName.length) {\n                    this.log = '姓名为空，请输入姓名和工号';\n                    return;\n                }\n                let key = \"(name,id)\";\n                let value = \"'\" + this.inputName + \"', '\" + this.inputId + \"'\";\n                let insertSql = \"insert into \" + this.tableName + key + \" values(\" + value + \")\";\n                console.log(insertSql);\n                plus.sqlite.executeSql({\n                    // 注意这里 name 传参是数据库名，而不是表名\n                    name: this.databaseName,\n                    sql: insertSql,\n                    success: (res) => {\n                        this.log = '插入数据成功';\n                        this.userInfos.push({\n                            name: this.inputName,\n                            id: this.inputId,\n                        });\n                    },\n                    fail: (e) => {\n                        console.log(e);\n                        if (e.code === -1404) {\n                            this.log = '插入失败,该数据已存在';\n                        } else {\n                            this.log = '插入数据失败';\n                        }\n                    }\n                });\n            },\n            deleteDataByName() {\n                let deleteDataByNameSql = `DELETE FROM ${this.tableName} WHERE name = '${this.inputName}'`;\n                console.log(deleteDataByNameSql);\n                plus.sqlite.executeSql({\n                    name: this.databaseName,\n                    sql: deleteDataByNameSql,\n                    success: (res) => {\n                        console.log(res);\n                        this.log = '根据姓名删除数据成功';\n                    },\n                    fail: (e) => {\n                        console.log(e);\n                        this.log = '根据姓名删除数据失败';\n                    }\n                });\n            },\n            deleteAllData() {\n                let deleteAllDstaSql = `DELETE FROM ${this.tableName}`;\n                console.log(deleteAllDstaSql);\n                plus.sqlite.executeSql({\n                    name: this.databaseName,\n                    sql: deleteAllDstaSql,\n                    success: (res) => {\n                        console.log(res);\n                        this.log = '删除所有数据成功';\n                        this.userInfos = [];\n                    },\n                    fail: (e) => {\n                        console.log(e);\n                        this.log = '删除所有数据失败';\n                    }\n                });\n            },\n            querryTargetData() {\n                if(!this.inputName || 0 === this.inputName.length) {\n                    this.log = '姓名为空，请输入姓名后再查询';\n                    return;\n                }\n                let key = \"name\";\n                let value = \"'\" + this.inputName + \"'\";\n                let selectSql = \"select * from \" + this.tableName + \" where \" + key + \" = \" + value;\n                console.log(selectSql);\n                // 注意这里使用的是 selectSql，不是 executeSql\n                plus.sqlite.selectSql({\n                    name: this.databaseName,\n                    sql: selectSql,\n                    success: (res) => {\n                        this.userInfos = [];\n                        console.log(res);\n                        this.log = '查询数据成功';\n                        for (let i = 0; i < res.length; i++) {\n                            let item = res[i];\n                            this.userInfos.push({\n                                name: item.name,\n                                id: item.id\n                            });\n                        }\n                    },\n                    fail: (e) => {\n                        console.log(e);\n                        this.log = '查询数据失败';\n                    }\n                });\n            },\n            querryAllData() {\n                let selectSql = \"select * from \" + this.tableName;\n                console.log(selectSql);\n                // 注意这里使用的是 selectSql，不是 executeSql\n                plus.sqlite.selectSql({\n                    name: this.databaseName,\n                    sql: selectSql,\n                    success: (res) => {\n                        console.log(res);\n                        this.log = '查询数据成功';\n                        this.userInfos = [];\n                        for (let i = 0; i < res.length; i++) {\n                            let item = res[i];\n                            this.userInfos.push({\n                                name: item.name,\n                                id: item.id,\n                            });\n                        }\n                    },\n                    fail: (e) => {\n                        console.log(e);\n                        this.log = '查询数据失败';\n                    }\n                });\n            }\n        }\n    }\n</script>\n<style>\n    .style-content {\n        width: 100%;\n        height: 100%;\n    }\n \n    .style-line {\n        width: 100%;\n        height: 75upx;\n        line-height: 75upx;\n    }\n \n    .style-row {\n        display: flex;\n        flex-direction: row;\n    }\n \n    .style-column {\n        display: flex;\n        flex-direction: column;\n    }\n \n    .style-half {\n        width: 50%;\n        height: 75upx;\n    }\n \n    .style-one-of-third {\n        width: 33.33%;\n        height: 75upx;\n        line-height: 75upx;\n    }\n \n    .style-two-of-third {\n        width: 66.67%;\n        height: 75upx;\n        line-height: 75upx;\n    }\n</style>","import mod from \"-!E:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\mini-css-extract-plugin\\\\dist\\\\loader.js??ref--6-oneOf-1-0!E:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\css-loader\\\\dist\\\\cjs.js??ref--6-oneOf-1-1!E:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\loaders\\\\stylePostLoader.js!E:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--6-oneOf-1-2!E:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\postcss-loader\\\\src\\\\index.js??ref--6-oneOf-1-3!E:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!E:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./db_test.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!E:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\mini-css-extract-plugin\\\\dist\\\\loader.js??ref--6-oneOf-1-0!E:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\css-loader\\\\dist\\\\cjs.js??ref--6-oneOf-1-1!E:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\loaders\\\\stylePostLoader.js!E:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--6-oneOf-1-2!E:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\postcss-loader\\\\src\\\\index.js??ref--6-oneOf-1-3!E:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!E:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./db_test.vue?vue&type=style&index=0&lang=css&\"","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1691746416416\n      var cssReload = require(\"E:/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"hmr\":true,\"publicPath\":\"../../\",\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"sourceRoot":""}